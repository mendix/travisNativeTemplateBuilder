branches:
    only:
        - master
cache:
    directories:
        - node_modules
env:
    global:
        - COMPILE_API=29
        - ANDROID_BUILD_TOOLS=29.0.2
        - ANDROID_HOME=${HOME}/android-sdk
        - ANDROID_TOOLS_URL="https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip"
        # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
        - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}
        - LATEST_NATIVE_TEMPLATE_VERSION=$(git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/mendix/native-template '*.*.*'  | tail -n 1 | cut -d "/" -f 3)
        # in our version we release as version-android or version-ios thus we need to remove it
        - LATEST_CURRENT_VERSION=$(git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/mendix/travisNativeTemplateBuilder '*.*.*'  | tail -n 1 | cut -d "/" -f 3)
jobs:
    fast_finish: true
    include:
        - name: "Prepare apk"
          dist: bionic
          language: java
          jdk:
              - openjdk8
          before_script:
              - if [ "$LATEST_NATIVE_TEMPLATE_VERSION" = "$LATEST_CURRENT_VERSION" ]; then travis_terminate 0; else echo "We have new version"; fi
          script:
              - ./install-android-tools.sh
              - curl "https://github.com/mendix/native-template/archive/${LATEST_NATIVE_TEMPLATE_VERSION}.zip" -L -o ./native-template.zip
              - unzip native-template.zip
              - cd native-template-${LATEST_NATIVE_TEMPLATE_VERSION:1}
              - npm install
              - cd android
              - ./gradlew assembleAppstoreDebug assembleAppstoreDebugAndroidTest -DtestBuildType=debug
              - mkdir -p $HOME/app/android
              - mv app/build/outputs/apk/appstore/debug/app-appstore-debug.apk $HOME/app/android/
              - mv app/build/outputs/apk/androidTest/appstore/debug/app-appstore-debug-androidTest.apk $HOME/app/android/
          before_deploy:
              # Set up git user name and tag this commit
              - git config --local user.name $GITHUB_USER
              - git config --local user.email $GITHUB_EMAIL
              - git tag $LATEST_NATIVE_TEMPLATE_VERSION
          deploy:
              provider: releases
              api_key: $API_KEY
              file_glob: true
              file: ${HOME}/app/android/*
              skip_cleanup: true
        - name: "Prepare ipa"
          os: osx
          osx_image: xcode11.6
          before_script:
              - set -e
              - if [ "$LATEST_NATIVE_TEMPLATE_VERSION" = "$LATEST_CURRENT_VERSION" ]; then exit 0; else echo "We have new version"; fi
          script:
              - set +e
              - curl https://github.com/mendix/native-template/archive/${LATEST_NATIVE_TEMPLATE_VERSION}.zip -L -o ./native-template.zip
              - unzip native-template.zip
              - cd native-template-${LATEST_NATIVE_TEMPLATE_VERSION:1}
              - npm install
              - cd ios
              - pod install
              - xcodebuild -quiet -workspace ./NativeTemplate.xcworkspace -scheme nativeTemplate -configuration Debug -sdk iphonesimulator -derivedDataPath ./build
              - mkdir -p $HOME/app/ios
              - cd $(pwd)/build/Build/Products/Debug-iphonesimulator/
              - zip -r $HOME/app/ios/NativeTemplate.zip NativeTemplate.app
          before_deploy:
              # Set up git user name and tag this commit
              - git config --local user.name $GITHUB_USER
              - git config --local user.email $GITHUB_EMAIL
              - git tag $LATEST_NATIVE_TEMPLATE_VERSION
          deploy:
              provider: releases
              api_key: $API_KEY
              file_glob: true
              file: ${HOME}/app/ios/*
              skip_cleanup: true
