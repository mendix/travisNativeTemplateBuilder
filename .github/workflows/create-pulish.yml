name: Publish apk / ipa

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]
    schedule:
        # * is a special character in YAML so you have to quote this string
        - cron:  '0 23 * * *'

jobs:
    create_apk:
        name: Create apk
        runs-on: ubuntu-latest
        steps:
            - name: "Checking-out code"
              uses: actions/checkout@v2
              with:
                  submodules: false
            - name: "Defining environment variables"
              run: |
                echo "COMPILE_API=29" >> $GITHUB_ENV
                echo "ANDROID_BUILD_TOOLS=29.0.2" >> $GITHUB_ENV
                echo "PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}" >> $GITHUB_ENV
                echo "LATEST_NATIVE_TEMPLATE_VERSION=$(git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/mendix/native-template '*.*.*'  | tail -n 1 | cut -d "/" -f 3)" >> $GITHUB_ENV
                echo "LATEST_CURRENT_VERSION=$(git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/mendix/travisNativeTemplateBuilder '*.*.*'  | tail -n 1 | cut -d "/" -f 3)" >> $GITHUB_ENV
            - name: "Defining cache"
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: "Assembling apk"
              run: |
                curl "https://github.com/mendix/native-template/archive/${LATEST_NATIVE_TEMPLATE_VERSION}.zip" -L -o ./native-template.zip
                unzip native-template.zip
                cd native-template-${LATEST_NATIVE_TEMPLATE_VERSION:1}
                npm install
                cd android
                ./gradlew assembleAppstoreDebug assembleAppstoreDebugAndroidTest -DtestBuildType=debug
                mkdir -p ~/app/android
                mv app/build/outputs/apk/appstore/debug/app-appstore-debug.apk ~/app/android/
                mv app/build/outputs/apk/androidTest/appstore/debug/app-appstore-debug-androidTest.apk ~/app/android/
            - name: Creating Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
              with:
                tag_name: ${{ github.ref }}
                release_name: Release ${{ LATEST_NATIVE_TEMPLATE_VERSION }}
                body: |
                  Automated apk release generated via https://github.com/mendix/native-template ${{LATEST_NATIVE_TEMPLATE_VERSION}}
                draft: false
                prerelease: false
            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
                asset_path: ~/app/android/app-appstore-debug.apk
                asset_name: app-appstore-debug.apk
                asset_content_type: application/zip
            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
                asset_path: ~/app/android/app-appstore-debug-androidTest.apk
                asset_name: app-appstore-debug-androidTest.apk
                asset_content_type: application/zip